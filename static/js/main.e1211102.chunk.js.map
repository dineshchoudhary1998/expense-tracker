{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAUeA,EARA,WACX,OACI,kD,qBCDO,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,qBACD,kCACOF,GADP,IAEIG,aAAaH,EAAMG,aAAaC,QAC5B,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAErD,IAAK,kBACD,kCACOP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,iBAIhD,QACI,OAAOH,ICfbQ,EAAe,CACjBL,aAAc,IAILM,EAAeC,wBAAcF,GAI7BG,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAC7B,EAA2BC,qBAAWC,EAAYN,GAAlD,mBAAQR,EAAR,KAAee,EAAf,KAiBA,OAAQ,cAAEN,EAAcO,SAAhB,CAAyBC,MAAO,CACpCd,aAAcH,EAAMG,aACpBe,kBAhBJ,SAA2BZ,GACvBS,EAAS,CACLb,KAAM,qBACNK,QAASD,KAcba,eAVJ,SAAwBd,GACpBU,EAAS,CACLb,KAAM,kBACNK,QAASF,MAIT,SAKNO,KCpBSQ,EAbC,WACd,IAGMC,EAHmBC,qBAAWb,GAA5BN,aACqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GACpE,OACI,qCACE,8CACA,mCAAOP,SCoBFQ,EA5BQ,WACpB,IACMC,EADmBR,qBAAWb,GAA5BN,aACqBoB,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDO,EAASD,EACd1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAEFI,IAEH,EADDF,EAAQ1B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAEtEC,QAAQ,GACV,OAEE,sBAAKK,UAAU,oBAAf,UACA,gCACE,wCACA,oBAAIA,UAAU,aAAd,cAA6BF,QAE/B,gCACE,yCACA,oBAAIE,UAAU,cAAd,cAA8BD,YCVvBE,EAZK,SAAC,GAAoB,IAAlB7B,EAAiB,EAAjBA,YACZa,EAAqBI,qBAAWb,GAAhCS,kBAEDiB,EAAO9B,EAAYmB,OAAS,EAAI,IAAM,IAC5C,OACI,qBAAIS,UAAY5B,EAAYmB,OAAQ,EAAI,SAAU,OAAlD,UACCnB,EAAY+B,KADb,IACoB,iCAAOD,EAAP,IAAcE,KAAKC,IAAIjC,EAAYmB,WAAe,wBACtES,UAAU,aAAaM,QAAS,kBAAMrB,EAAkBb,EAAYC,KADE,mBCa/DkC,EAlBS,WACpB,IAAQrC,EAAiBmB,qBAAWb,GAA5BN,aACR,OACI,qCACE,yCACA,oBAAI8B,UAAU,OAAd,SACG9B,EAAaoB,KAAK,SAAAlB,GAAW,OAC5B,cAAC,EAAD,CAEAA,YAAeA,GADVA,EAAYC,aCgChBmC,EAzCQ,WAEnB,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOlB,EAAP,KAAeoB,EAAf,KACOzB,EAAkBG,qBAAWb,GAA7BU,eAaP,OACI,qCAEF,qDACA,uBAAM0B,SAdS,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAgB,CACnB1C,GAAI+B,KAAKY,MAAsB,IAAhBZ,KAAKa,UACpBd,KAAKA,EACLZ,QAASA,GAEZL,EAAe6B,IAMf,UACE,sBAAKf,UAAU,eAAf,UACE,uBAAOkB,QAAQ,OAAf,kBACA,uBAAOjD,KAAK,OAAOe,MAAOmB,EAAMgB,SAAW,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOpC,QACjEqC,YAAY,qBAEhB,sBAAKrB,UAAU,eAAf,UACE,wBAAOkB,QAAQ,SAAf,oBACU,uBADV,6CAGA,uBAAOjD,KAAK,SAASe,MAAOO,EAAQ4B,SAAW,SAACN,GAAD,OAAOF,EAAUE,EAAEO,OAAOpC,QACzEqC,YAAa,uBAEf,wBAAQrB,UAAU,MAAlB,oCCbOsB,MAff,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKtB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCXRuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e1211102.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense-Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","//To specify the application state changes in reponse to action in our site.\r\n//create new state and sent on action such as delete\r\n\r\nexport default (state, action) =>{\r\n    switch( action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:state.transactions.filter(\r\n                    transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n           \r\n                \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial state\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n//Create Context\r\nexport const GlobalContext =createContext(initialState);\r\n\r\n//Create Provider Component---Wrapping the components from appjs\r\n\r\nexport const GlobalProvider = ({ children }) =>{\r\n    const [ state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (< GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n     {children}\r\n    </GlobalContext.Provider>);\r\n}\r\n\r\n\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n \r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <>\r\n          <h4>Your Balance</h4>\r\n          <h1 >${total}</h1>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, {useContext}  from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst IncomeExpenses = () => {\r\n   const { transactions } = useContext(GlobalContext);\r\n   const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n   const income = amounts\r\n   .filter(item => item > 0)\r\n   .reduce((acc, item) => (acc += item), 0)\r\n   .toFixed(2);\r\n\r\n    const expense = (\r\n      amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n      -1\r\n    ).toFixed(2);\r\n    return (\r\n        \r\n      <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p  className=\"money plus\">${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p  className=\"money minus\">${expense}</p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React,{ useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst Transaction = ({ transaction}) => {\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={ transaction.amount <0 ? 'minus ': 'plus'}>\r\n        {transaction.text } <span>{sign}${Math.abs(transaction.amount)}</span><button \r\n        className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\r\n    </li> \r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\nconst TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    return (\r\n        <>\r\n          <h3>History</h3>\r\n          <ul className=\"list\">\r\n            {transactions.map( transaction =>(\r\n              <Transaction \r\n              key={transaction.id}\r\n              transaction = {transaction} />\r\n            ))}\r\n         \r\n          </ul>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, { useState,useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0); \r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = e =>{\r\n      e.preventDefault();\r\n\r\n      const newTransaction ={\r\n         id: Math.floor(Math.random() * 100000000),\r\n         text:text,\r\n         amount: +amount\r\n      }\r\n      addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <>\r\n        \r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit} >\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={ (e) => setText(e.target.value)}  \r\n            placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label>\r\n          <input type=\"number\" value={amount} onChange={ (e) => setAmount(e.target.value) }\r\n          placeholder =\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","\nimport './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses  from \"./components/IncomeExpenses\";\nimport  TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n         \n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}